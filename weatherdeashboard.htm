
<!-- saved from url=(0049)https://www.finchamweather.co.uk/weathergraph.htm -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><meta name="color-scheme" content="light dark"></head><body><div class="line-gutter-backdrop"></div><form autocomplete="off"><label class="line-wrap-control">Line wrap<input type="checkbox" aria-label="Line wrap"></label></form><table><tbody><tr><td class="line-number" value="1"></td><td class="line-content"><span class="html-doctype">&lt;!DOCTYPE html&gt;</span></td></tr><tr><td class="line-number" value="2"></td><td class="line-content"><span class="html-tag">&lt;html <span class="html-attribute-name">lang</span>="<span class="html-attribute-value">en</span>"&gt;</span></td></tr><tr><td class="line-number" value="3"></td><td class="line-content"><span class="html-tag">&lt;head&gt;</span></td></tr><tr><td class="line-number" value="4"></td><td class="line-content">    <span class="html-tag">&lt;meta <span class="html-attribute-name">charset</span>="<span class="html-attribute-value">UTF-8</span>"&gt;</span></td></tr><tr><td class="line-number" value="5"></td><td class="line-content">    <span class="html-tag">&lt;meta <span class="html-attribute-name">name</span>="<span class="html-attribute-value">viewport</span>" <span class="html-attribute-name">content</span>="<span class="html-attribute-value">width=device-width, initial-scale=1.0</span>"&gt;</span></td></tr><tr><td class="line-number" value="6"></td><td class="line-content">    <span class="html-tag">&lt;meta <span class="html-attribute-name">name</span>="<span class="html-attribute-value">apple-mobile-web-app-capable</span>" <span class="html-attribute-name">content</span>="<span class="html-attribute-value">yes</span>"&gt;</span></td></tr><tr><td class="line-number" value="7"></td><td class="line-content">    <span class="html-tag">&lt;meta <span class="html-attribute-name">name</span>="<span class="html-attribute-value">apple-mobile-web-app-status-bar-style</span>" <span class="html-attribute-name">content</span>="<span class="html-attribute-value">black</span>"&gt;</span></td></tr><tr><td class="line-number" value="8"></td><td class="line-content">    <span class="html-tag">&lt;title&gt;</span>Live Weather Graph<span class="html-tag">&lt;/title&gt;</span></td></tr><tr><td class="line-number" value="9"></td><td class="line-content">    <span class="html-tag">&lt;script <span class="html-attribute-name">src</span>="<a class="html-attribute-value html-resource-link" target="_blank" href="https://cdnjs.cloudflare.com/ajax/libs/paho-mqtt/1.0.1/mqttws31.js" rel="noreferrer noopener">https://cdnjs.cloudflare.com/ajax/libs/paho-mqtt/1.0.1/mqttws31.js</a>"&gt;</span><span class="html-tag">&lt;/script&gt;</span></td></tr><tr><td class="line-number" value="10"></td><td class="line-content">    <span class="html-tag">&lt;script <span class="html-attribute-name">src</span>="<a class="html-attribute-value html-resource-link" target="_blank" href="https://cdn.jsdelivr.net/npm/chart.js" rel="noreferrer noopener">https://cdn.jsdelivr.net/npm/chart.js</a>"&gt;</span><span class="html-tag">&lt;/script&gt;</span></td></tr><tr><td class="line-number" value="11"></td><td class="line-content">    <span class="html-tag">&lt;script <span class="html-attribute-name">src</span>="<a class="html-attribute-value html-resource-link" target="_blank" href="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns" rel="noreferrer noopener">https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns</a>"&gt;</span><span class="html-tag">&lt;/script&gt;</span></td></tr><tr><td class="line-number" value="12"></td><td class="line-content">    <span class="html-tag">&lt;style&gt;</span></td></tr><tr><td class="line-number" value="13"></td><td class="line-content">        body {</td></tr><tr><td class="line-number" value="14"></td><td class="line-content">            font-family: Arial, sans-serif;</td></tr><tr><td class="line-number" value="15"></td><td class="line-content">            margin: 20px;</td></tr><tr><td class="line-number" value="16"></td><td class="line-content">        }</td></tr><tr><td class="line-number" value="17"></td><td class="line-content">        #mqttStatus {</td></tr><tr><td class="line-number" value="18"></td><td class="line-content">            margin-bottom: 10px;</td></tr><tr><td class="line-number" value="19"></td><td class="line-content">            text-align: left;</td></tr><tr><td class="line-number" value="20"></td><td class="line-content">            font-size: 0.8em;</td></tr><tr><td class="line-number" value="21"></td><td class="line-content">            font-weight: bold;</td></tr><tr><td class="line-number" value="22"></td><td class="line-content">        }</td></tr><tr><td class="line-number" value="23"></td><td class="line-content">        .dot {</td></tr><tr><td class="line-number" value="24"></td><td class="line-content">            height: 10px;</td></tr><tr><td class="line-number" value="25"></td><td class="line-content">            width: 10px;</td></tr><tr><td class="line-number" value="26"></td><td class="line-content">            border-radius: 30%;</td></tr><tr><td class="line-number" value="27"></td><td class="line-content">            display: inline-block;</td></tr><tr><td class="line-number" value="28"></td><td class="line-content">        }</td></tr><tr><td class="line-number" value="29"></td><td class="line-content">        .green {</td></tr><tr><td class="line-number" value="30"></td><td class="line-content">            background-color: green;</td></tr><tr><td class="line-number" value="31"></td><td class="line-content">        }</td></tr><tr><td class="line-number" value="32"></td><td class="line-content">        .red {</td></tr><tr><td class="line-number" value="33"></td><td class="line-content">            background-color: red;</td></tr><tr><td class="line-number" value="34"></td><td class="line-content">        }</td></tr><tr><td class="line-number" value="35"></td><td class="line-content">        .orange {</td></tr><tr><td class="line-number" value="36"></td><td class="line-content">            background-color: orange;</td></tr><tr><td class="line-number" value="37"></td><td class="line-content">        }</td></tr><tr><td class="line-number" value="38"></td><td class="line-content">        .pulse {</td></tr><tr><td class="line-number" value="39"></td><td class="line-content">            animation: pulse 1s infinite;</td></tr><tr><td class="line-number" value="40"></td><td class="line-content">        }</td></tr><tr><td class="line-number" value="41"></td><td class="line-content">        .pulse-once {</td></tr><tr><td class="line-number" value="42"></td><td class="line-content">            animation: pulse-once 1s;</td></tr><tr><td class="line-number" value="43"></td><td class="line-content">        }</td></tr><tr><td class="line-number" value="44"></td><td class="line-content">        @keyframes pulse {</td></tr><tr><td class="line-number" value="45"></td><td class="line-content">            0% { transform: scale(1); }</td></tr><tr><td class="line-number" value="46"></td><td class="line-content">            50% { transform: scale(1.2); }</td></tr><tr><td class="line-number" value="47"></td><td class="line-content">            100% { transform: scale(1); }</td></tr><tr><td class="line-number" value="48"></td><td class="line-content">        }</td></tr><tr><td class="line-number" value="49"></td><td class="line-content">        @keyframes pulse-once {</td></tr><tr><td class="line-number" value="50"></td><td class="line-content">            0% { transform: scale(1); }</td></tr><tr><td class="line-number" value="51"></td><td class="line-content">            50% { transform: scale(1.2); }</td></tr><tr><td class="line-number" value="52"></td><td class="line-content">            100% { transform: scale(1); }</td></tr><tr><td class="line-number" value="53"></td><td class="line-content">        }</td></tr><tr><td class="line-number" value="54"></td><td class="line-content">        #forecast {</td></tr><tr><td class="line-number" value="55"></td><td class="line-content">            margin-bottom: 10px;</td></tr><tr><td class="line-number" value="56"></td><td class="line-content">            text-align: left;</td></tr><tr><td class="line-number" value="57"></td><td class="line-content">            font-size: 1.2em;</td></tr><tr><td class="line-number" value="58"></td><td class="line-content">            font-weight: bold;</td></tr><tr><td class="line-number" value="59"></td><td class="line-content">        }</td></tr><tr><td class="line-number" value="60"></td><td class="line-content">        #stats {</td></tr><tr><td class="line-number" value="61"></td><td class="line-content">            display: flex;</td></tr><tr><td class="line-number" value="62"></td><td class="line-content">            justify-content: center;</td></tr><tr><td class="line-number" value="63"></td><td class="line-content">            gap: 20px;</td></tr><tr><td class="line-number" value="64"></td><td class="line-content">            margin-bottom: 20px;</td></tr><tr><td class="line-number" value="65"></td><td class="line-content">            font-size: 1.2em;</td></tr><tr><td class="line-number" value="66"></td><td class="line-content">            font-weight: bold;</td></tr><tr><td class="line-number" value="67"></td><td class="line-content">        }</td></tr><tr><td class="line-number" value="68"></td><td class="line-content">        #stats div {</td></tr><tr><td class="line-number" value="69"></td><td class="line-content">            padding: 10px 20px;</td></tr><tr><td class="line-number" value="70"></td><td class="line-content">            border: 1px solid #ccc;</td></tr><tr><td class="line-number" value="71"></td><td class="line-content">            border-radius: 8px;</td></tr><tr><td class="line-number" value="72"></td><td class="line-content">            box-shadow: 2px 2px 12px #aaa;</td></tr><tr><td class="line-number" value="73"></td><td class="line-content">            background-color: #f9f9f9;</td></tr><tr><td class="line-number" value="74"></td><td class="line-content">        }</td></tr><tr><td class="line-number" value="75"></td><td class="line-content">        canvas {</td></tr><tr><td class="line-number" value="76"></td><td class="line-content">            border: 1px solid #ccc;</td></tr><tr><td class="line-number" value="77"></td><td class="line-content">            box-shadow: 2px 2px 12px #aaa;</td></tr><tr><td class="line-number" value="78"></td><td class="line-content">        }</td></tr><tr><td class="line-number" value="79"></td><td class="line-content">    <span class="html-tag">&lt;/style&gt;</span></td></tr><tr><td class="line-number" value="80"></td><td class="line-content"><span class="html-tag">&lt;/head&gt;</span></td></tr><tr><td class="line-number" value="81"></td><td class="line-content"><span class="html-tag">&lt;body&gt;</span></td></tr><tr><td class="line-number" value="82"></td><td class="line-content">    <span class="html-tag">&lt;div <span class="html-attribute-name">id</span>="<span class="html-attribute-value">mqttStatus</span>"&gt;</span><span class="html-tag">&lt;span <span class="html-attribute-name">id</span>="<span class="html-attribute-value">connectionDot</span>" <span class="html-attribute-name">class</span>="<span class="html-attribute-value">dot red</span>"&gt;</span><span class="html-tag">&lt;/span&gt;</span> MQTT: Disconnected<span class="html-tag">&lt;/div&gt;</span></td></tr><tr><td class="line-number" value="83"></td><td class="line-content">    <span class="html-tag">&lt;div <span class="html-attribute-name">id</span>="<span class="html-attribute-value">forecast</span>"&gt;</span>Forecast: Loading...<span class="html-tag">&lt;/div&gt;</span></td></tr><tr><td class="line-number" value="84"></td><td class="line-content">    <span class="html-tag">&lt;div <span class="html-attribute-name">id</span>="<span class="html-attribute-value">stats</span>"&gt;</span></td></tr><tr><td class="line-number" value="85"></td><td class="line-content">        <span class="html-tag">&lt;div <span class="html-attribute-name">id</span>="<span class="html-attribute-value">maxWindSpeed</span>"&gt;</span>Max Wind Speed: 0 mph<span class="html-tag">&lt;/div&gt;</span></td></tr><tr><td class="line-number" value="86"></td><td class="line-content">        <span class="html-tag">&lt;div <span class="html-attribute-name">id</span>="<span class="html-attribute-value">maxTemp</span>"&gt;</span>Max Temperature: 0 °C<span class="html-tag">&lt;/div&gt;</span></td></tr><tr><td class="line-number" value="87"></td><td class="line-content">        <span class="html-tag">&lt;div <span class="html-attribute-name">id</span>="<span class="html-attribute-value">minTemp</span>"&gt;</span>Min Temperature: 0 °C<span class="html-tag">&lt;/div&gt;</span></td></tr><tr><td class="line-number" value="88"></td><td class="line-content">        <span class="html-tag">&lt;div <span class="html-attribute-name">id</span>="<span class="html-attribute-value">maxPressure</span>"&gt;</span>Max Pressure: 0 mbar<span class="html-tag">&lt;/div&gt;</span></td></tr><tr><td class="line-number" value="89"></td><td class="line-content">        <span class="html-tag">&lt;div <span class="html-attribute-name">id</span>="<span class="html-attribute-value">minPressure</span>"&gt;</span>Min Pressure: 0 mbar<span class="html-tag">&lt;/div&gt;</span></td></tr><tr><td class="line-number" value="90"></td><td class="line-content">    <span class="html-tag">&lt;/div&gt;</span></td></tr><tr><td class="line-number" value="91"></td><td class="line-content">    <span class="html-tag">&lt;canvas <span class="html-attribute-name">id</span>="<span class="html-attribute-value">weatherChart</span>" <span class="html-attribute-name">width</span>="<span class="html-attribute-value">800</span>" <span class="html-attribute-name">height</span>="<span class="html-attribute-value">400</span>"&gt;</span><span class="html-tag">&lt;/canvas&gt;</span></td></tr><tr><td class="line-number" value="92"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="93"></td><td class="line-content"><span class="html-tag">&lt;script&gt;</span></td></tr><tr><td class="line-number" value="94"></td><td class="line-content">    // MQTT connection settings</td></tr><tr><td class="line-number" value="95"></td><td class="line-content">    var mqtt;</td></tr><tr><td class="line-number" value="96"></td><td class="line-content">    var reconnectTimeout = 2000;</td></tr><tr><td class="line-number" value="97"></td><td class="line-content">    var host = "mqtt.cetools.org";</td></tr><tr><td class="line-number" value="98"></td><td class="line-content">    var port = location.protocol === 'https:' ? 8081 : 8080;</td></tr><tr><td class="line-number" value="99"></td><td class="line-content">    var options = {</td></tr><tr><td class="line-number" value="100"></td><td class="line-content">        timeout: 3,</td></tr><tr><td class="line-number" value="101"></td><td class="line-content">        onSuccess: onConnect,</td></tr><tr><td class="line-number" value="102"></td><td class="line-content">        onFailure: onFailure,</td></tr><tr><td class="line-number" value="103"></td><td class="line-content">        useSSL: location.protocol === 'https:',</td></tr><tr><td class="line-number" value="104"></td><td class="line-content">    };</td></tr><tr><td class="line-number" value="105"></td><td class="line-content">    var clientID = "clientID" + parseInt(Math.random() * 100);</td></tr><tr><td class="line-number" value="106"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="107"></td><td class="line-content">    function updateConnectionStatus(status) {</td></tr><tr><td class="line-number" value="108"></td><td class="line-content">        const dot = document.getElementById("connectionDot");</td></tr><tr><td class="line-number" value="109"></td><td class="line-content">        if (status === "connected") {</td></tr><tr><td class="line-number" value="110"></td><td class="line-content">            dot.className = "dot green";</td></tr><tr><td class="line-number" value="111"></td><td class="line-content">            document.getElementById("mqttStatus").innerHTML = `&lt;span class="dot green" id="connectionDot"&gt;&lt;/span&gt; MQTT: Connected`;</td></tr><tr><td class="line-number" value="112"></td><td class="line-content">        } else if (status === "disconnected") {</td></tr><tr><td class="line-number" value="113"></td><td class="line-content">            dot.className = "dot red";</td></tr><tr><td class="line-number" value="114"></td><td class="line-content">            document.getElementById("mqttStatus").innerHTML = `&lt;span class="dot red" id="connectionDot"&gt;&lt;/span&gt; MQTT: Disconnected`;</td></tr><tr><td class="line-number" value="115"></td><td class="line-content">        } else if (status === "reconnecting") {</td></tr><tr><td class="line-number" value="116"></td><td class="line-content">            dot.className = "dot orange";</td></tr><tr><td class="line-number" value="117"></td><td class="line-content">            document.getElementById("mqttStatus").innerHTML = `&lt;span class="dot orange" id="connectionDot"&gt;&lt;/span&gt; MQTT: Reconnecting`;</td></tr><tr><td class="line-number" value="118"></td><td class="line-content">        }</td></tr><tr><td class="line-number" value="119"></td><td class="line-content">    }</td></tr><tr><td class="line-number" value="120"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="121"></td><td class="line-content">    function pulseDot() {</td></tr><tr><td class="line-number" value="122"></td><td class="line-content">        const dot = document.getElementById("connectionDot");</td></tr><tr><td class="line-number" value="123"></td><td class="line-content">        dot.classList.add("pulse-once");</td></tr><tr><td class="line-number" value="124"></td><td class="line-content">        setTimeout(() =&gt; {</td></tr><tr><td class="line-number" value="125"></td><td class="line-content">            dot.classList.remove("pulse-once");</td></tr><tr><td class="line-number" value="126"></td><td class="line-content">        }, 1000); // Duration of the pulse-once animation</td></tr><tr><td class="line-number" value="127"></td><td class="line-content">    }</td></tr><tr><td class="line-number" value="128"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="129"></td><td class="line-content">    function onFailure(message) {</td></tr><tr><td class="line-number" value="130"></td><td class="line-content">        console.log("Connection Attempt to Host " + host + " Failed: ", message.errorMessage);</td></tr><tr><td class="line-number" value="131"></td><td class="line-content">        updateConnectionStatus("disconnected");</td></tr><tr><td class="line-number" value="132"></td><td class="line-content">        setTimeout(MQTTconnect, reconnectTimeout);</td></tr><tr><td class="line-number" value="133"></td><td class="line-content">    }</td></tr><tr><td class="line-number" value="134"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="135"></td><td class="line-content">    function onConnect() {</td></tr><tr><td class="line-number" value="136"></td><td class="line-content">        console.log("Connected ");</td></tr><tr><td class="line-number" value="137"></td><td class="line-content">        updateConnectionStatus("connected");</td></tr><tr><td class="line-number" value="138"></td><td class="line-content">        mqtt.subscribe("personal/ucfnaps/downhamweather/loop");</td></tr><tr><td class="line-number" value="139"></td><td class="line-content">        mqtt.subscribe("personal/ucfnaps/eink/met");</td></tr><tr><td class="line-number" value="140"></td><td class="line-content">    }</td></tr><tr><td class="line-number" value="141"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="142"></td><td class="line-content">    function MQTTconnect() {</td></tr><tr><td class="line-number" value="143"></td><td class="line-content">        console.log("Connecting to " + host + " on port " + port);</td></tr><tr><td class="line-number" value="144"></td><td class="line-content">        updateConnectionStatus("reconnecting");</td></tr><tr><td class="line-number" value="145"></td><td class="line-content">        mqtt = new Paho.MQTT.Client(host, port, clientID);</td></tr><tr><td class="line-number" value="146"></td><td class="line-content">        mqtt.onMessageArrived = onMessageArrived;</td></tr><tr><td class="line-number" value="147"></td><td class="line-content">        mqtt.onConnectionLost = function(responseObject) {</td></tr><tr><td class="line-number" value="148"></td><td class="line-content">            if (responseObject.errorCode !== 0) {</td></tr><tr><td class="line-number" value="149"></td><td class="line-content">                console.log("Connection Lost: " + responseObject.errorMessage);</td></tr><tr><td class="line-number" value="150"></td><td class="line-content">                updateConnectionStatus("disconnected");</td></tr><tr><td class="line-number" value="151"></td><td class="line-content">                setTimeout(MQTTconnect, reconnectTimeout);  // Attempt to reconnect</td></tr><tr><td class="line-number" value="152"></td><td class="line-content">            }</td></tr><tr><td class="line-number" value="153"></td><td class="line-content">        };</td></tr><tr><td class="line-number" value="154"></td><td class="line-content">        mqtt.connect(options);</td></tr><tr><td class="line-number" value="155"></td><td class="line-content">    }</td></tr><tr><td class="line-number" value="156"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="157"></td><td class="line-content">    // Chart.js setup</td></tr><tr><td class="line-number" value="158"></td><td class="line-content">    const ctx = document.getElementById('weatherChart').getContext('2d');</td></tr><tr><td class="line-number" value="159"></td><td class="line-content">    const weatherChart = new Chart(ctx, {</td></tr><tr><td class="line-number" value="160"></td><td class="line-content">        type: 'line',</td></tr><tr><td class="line-number" value="161"></td><td class="line-content">        data: {</td></tr><tr><td class="line-number" value="162"></td><td class="line-content">            labels: [],  // Time labels</td></tr><tr><td class="line-number" value="163"></td><td class="line-content">            datasets: [{</td></tr><tr><td class="line-number" value="164"></td><td class="line-content">                label: 'Wind Speed (mph)',</td></tr><tr><td class="line-number" value="165"></td><td class="line-content">                data: [],</td></tr><tr><td class="line-number" value="166"></td><td class="line-content">                borderColor: 'rgba(75, 192, 192, 1)',</td></tr><tr><td class="line-number" value="167"></td><td class="line-content">                borderWidth: 3,</td></tr><tr><td class="line-number" value="168"></td><td class="line-content">                fill: false,</td></tr><tr><td class="line-number" value="169"></td><td class="line-content">                yAxisID: 'y-axis-1',</td></tr><tr><td class="line-number" value="170"></td><td class="line-content">                tension: 0.1</td></tr><tr><td class="line-number" value="171"></td><td class="line-content">            },</td></tr><tr><td class="line-number" value="172"></td><td class="line-content">            {</td></tr><tr><td class="line-number" value="173"></td><td class="line-content">                label: 'Temperature (°C)',</td></tr><tr><td class="line-number" value="174"></td><td class="line-content">                data: [],</td></tr><tr><td class="line-number" value="175"></td><td class="line-content">                borderColor: 'rgba(255, 99, 132, 1)',</td></tr><tr><td class="line-number" value="176"></td><td class="line-content">                borderWidth: 3,</td></tr><tr><td class="line-number" value="177"></td><td class="line-content">                fill: false,</td></tr><tr><td class="line-number" value="178"></td><td class="line-content">                yAxisID: 'y-axis-2',</td></tr><tr><td class="line-number" value="179"></td><td class="line-content">                tension: 0.1</td></tr><tr><td class="line-number" value="180"></td><td class="line-content">            },</td></tr><tr><td class="line-number" value="181"></td><td class="line-content">            {</td></tr><tr><td class="line-number" value="182"></td><td class="line-content">                label: 'Solar Radiation (W/m²)',</td></tr><tr><td class="line-number" value="183"></td><td class="line-content">                data: [],</td></tr><tr><td class="line-number" value="184"></td><td class="line-content">                borderColor: 'rgba(255, 206, 86, 1)',</td></tr><tr><td class="line-number" value="185"></td><td class="line-content">                borderWidth: 3,</td></tr><tr><td class="line-number" value="186"></td><td class="line-content">                fill: false,</td></tr><tr><td class="line-number" value="187"></td><td class="line-content">                yAxisID: 'y-axis-3',</td></tr><tr><td class="line-number" value="188"></td><td class="line-content">                tension: 0.1</td></tr><tr><td class="line-number" value="189"></td><td class="line-content">            },</td></tr><tr><td class="line-number" value="190"></td><td class="line-content">            {</td></tr><tr><td class="line-number" value="191"></td><td class="line-content">                label: 'Rain Amount (mm)',</td></tr><tr><td class="line-number" value="192"></td><td class="line-content">                data: [],</td></tr><tr><td class="line-number" value="193"></td><td class="line-content">                borderColor: 'rgba(54, 162, 235, 1)',</td></tr><tr><td class="line-number" value="194"></td><td class="line-content">                borderWidth: 3,</td></tr><tr><td class="line-number" value="195"></td><td class="line-content">                fill: false,</td></tr><tr><td class="line-number" value="196"></td><td class="line-content">                yAxisID: 'y-axis-4',</td></tr><tr><td class="line-number" value="197"></td><td class="line-content">                tension: 0.1</td></tr><tr><td class="line-number" value="198"></td><td class="line-content">            },</td></tr><tr><td class="line-number" value="199"></td><td class="line-content">            {</td></tr><tr><td class="line-number" value="200"></td><td class="line-content">                label: 'Pressure (mbar)',</td></tr><tr><td class="line-number" value="201"></td><td class="line-content">                data: [],</td></tr><tr><td class="line-number" value="202"></td><td class="line-content">                borderColor: 'rgba(153, 102, 255, 1)',</td></tr><tr><td class="line-number" value="203"></td><td class="line-content">                borderWidth: 3,</td></tr><tr><td class="line-number" value="204"></td><td class="line-content">                fill: false,</td></tr><tr><td class="line-number" value="205"></td><td class="line-content">                yAxisID: 'y-axis-5',</td></tr><tr><td class="line-number" value="206"></td><td class="line-content">                tension: 0.1</td></tr><tr><td class="line-number" value="207"></td><td class="line-content">            }]</td></tr><tr><td class="line-number" value="208"></td><td class="line-content">        },</td></tr><tr><td class="line-number" value="209"></td><td class="line-content">        options: {</td></tr><tr><td class="line-number" value="210"></td><td class="line-content">            responsive: true,</td></tr><tr><td class="line-number" value="211"></td><td class="line-content">            plugins: {</td></tr><tr><td class="line-number" value="212"></td><td class="line-content">                legend: {</td></tr><tr><td class="line-number" value="213"></td><td class="line-content">                    position: 'top',</td></tr><tr><td class="line-number" value="214"></td><td class="line-content">                },</td></tr><tr><td class="line-number" value="215"></td><td class="line-content">                title: {</td></tr><tr><td class="line-number" value="216"></td><td class="line-content">                    display: true,</td></tr><tr><td class="line-number" value="217"></td><td class="line-content">                    text: 'Live Weather Data'</td></tr><tr><td class="line-number" value="218"></td><td class="line-content">                },</td></tr><tr><td class="line-number" value="219"></td><td class="line-content">                decimation: {</td></tr><tr><td class="line-number" value="220"></td><td class="line-content">                    enabled: true,</td></tr><tr><td class="line-number" value="221"></td><td class="line-content">                    algorithm: 'min-max',</td></tr><tr><td class="line-number" value="222"></td><td class="line-content">                    samples: 100,  // Adjust this value as needed for performance</td></tr><tr><td class="line-number" value="223"></td><td class="line-content">                },</td></tr><tr><td class="line-number" value="224"></td><td class="line-content">            },</td></tr><tr><td class="line-number" value="225"></td><td class="line-content">            scales: {</td></tr><tr><td class="line-number" value="226"></td><td class="line-content">                x: {</td></tr><tr><td class="line-number" value="227"></td><td class="line-content">                    type: 'time',</td></tr><tr><td class="line-number" value="228"></td><td class="line-content">                    time: {</td></tr><tr><td class="line-number" value="229"></td><td class="line-content">                        unit: 'minute'</td></tr><tr><td class="line-number" value="230"></td><td class="line-content">                    },</td></tr><tr><td class="line-number" value="231"></td><td class="line-content">                    title: {</td></tr><tr><td class="line-number" value="232"></td><td class="line-content">                        display: true,</td></tr><tr><td class="line-number" value="233"></td><td class="line-content">                        text: 'Time'</td></tr><tr><td class="line-number" value="234"></td><td class="line-content">                    }</td></tr><tr><td class="line-number" value="235"></td><td class="line-content">                },</td></tr><tr><td class="line-number" value="236"></td><td class="line-content">                'y-axis-1': {</td></tr><tr><td class="line-number" value="237"></td><td class="line-content">                    type: 'linear',</td></tr><tr><td class="line-number" value="238"></td><td class="line-content">                    position: 'left',</td></tr><tr><td class="line-number" value="239"></td><td class="line-content">                    beginAtZero: true,</td></tr><tr><td class="line-number" value="240"></td><td class="line-content">                    title: {</td></tr><tr><td class="line-number" value="241"></td><td class="line-content">                        display: true,</td></tr><tr><td class="line-number" value="242"></td><td class="line-content">                        text: 'Wind Speed (mph)'</td></tr><tr><td class="line-number" value="243"></td><td class="line-content">                    }</td></tr><tr><td class="line-number" value="244"></td><td class="line-content">                },</td></tr><tr><td class="line-number" value="245"></td><td class="line-content">                'y-axis-2': {</td></tr><tr><td class="line-number" value="246"></td><td class="line-content">                    type: 'linear',</td></tr><tr><td class="line-number" value="247"></td><td class="line-content">                    position: 'right',</td></tr><tr><td class="line-number" value="248"></td><td class="line-content">                    beginAtZero: true,</td></tr><tr><td class="line-number" value="249"></td><td class="line-content">                    title: {</td></tr><tr><td class="line-number" value="250"></td><td class="line-content">                        display: true,</td></tr><tr><td class="line-number" value="251"></td><td class="line-content">                        text: 'Temperature (°C)'</td></tr><tr><td class="line-number" value="252"></td><td class="line-content">                    },</td></tr><tr><td class="line-number" value="253"></td><td class="line-content">                    grid: {</td></tr><tr><td class="line-number" value="254"></td><td class="line-content">                        drawOnChartArea: false</td></tr><tr><td class="line-number" value="255"></td><td class="line-content">                    }</td></tr><tr><td class="line-number" value="256"></td><td class="line-content">                },</td></tr><tr><td class="line-number" value="257"></td><td class="line-content">                'y-axis-3': {</td></tr><tr><td class="line-number" value="258"></td><td class="line-content">                    type: 'linear',</td></tr><tr><td class="line-number" value="259"></td><td class="line-content">                    position: 'right',</td></tr><tr><td class="line-number" value="260"></td><td class="line-content">                    beginAtZero:true,</td></tr><tr><td class="line-number" value="261"></td><td class="line-content">                    title: {</td></tr><tr><td class="line-number" value="262"></td><td class="line-content">                        display: true,</td></tr><tr><td class="line-number" value="263"></td><td class="line-content">                        text: 'Solar Radiation (W/m²)'</td></tr><tr><td class="line-number" value="264"></td><td class="line-content">                    },</td></tr><tr><td class="line-number" value="265"></td><td class="line-content">                    grid: {</td></tr><tr><td class="line-number" value="266"></td><td class="line-content">                        drawOnChartArea: false</td></tr><tr><td class="line-number" value="267"></td><td class="line-content">                    }</td></tr><tr><td class="line-number" value="268"></td><td class="line-content">                },</td></tr><tr><td class="line-number" value="269"></td><td class="line-content">                'y-axis-4': {</td></tr><tr><td class="line-number" value="270"></td><td class="line-content">                    type: 'linear',</td></tr><tr><td class="line-number" value="271"></td><td class="line-content">                    position: 'right',</td></tr><tr><td class="line-number" value="272"></td><td class="line-content">                    beginAtZero: true,</td></tr><tr><td class="line-number" value="273"></td><td class="line-content">                    title: {</td></tr><tr><td class="line-number" value="274"></td><td class="line-content">                        display: true,</td></tr><tr><td class="line-number" value="275"></td><td class="line-content">                        text: 'Rain Amount (mm)'</td></tr><tr><td class="line-number" value="276"></td><td class="line-content">                    },</td></tr><tr><td class="line-number" value="277"></td><td class="line-content">                    grid: {</td></tr><tr><td class="line-number" value="278"></td><td class="line-content">                        drawOnChartArea: false</td></tr><tr><td class="line-number" value="279"></td><td class="line-content">                    }</td></tr><tr><td class="line-number" value="280"></td><td class="line-content">                },</td></tr><tr><td class="line-number" value="281"></td><td class="line-content">                'y-axis-5': {</td></tr><tr><td class="line-number" value="282"></td><td class="line-content">                    type: 'linear',</td></tr><tr><td class="line-number" value="283"></td><td class="line-content">                    position: 'right',</td></tr><tr><td class="line-number" value="284"></td><td class="line-content">                    beginAtZero: true,</td></tr><tr><td class="line-number" value="285"></td><td class="line-content">                    title: {</td></tr><tr><td class="line-number" value="286"></td><td class="line-content">                        display: true,</td></tr><tr><td class="line-number" value="287"></td><td class="line-content">                        text: 'Pressure (mbar)'</td></tr><tr><td class="line-number" value="288"></td><td class="line-content">                    },</td></tr><tr><td class="line-number" value="289"></td><td class="line-content">                    grid: {</td></tr><tr><td class="line-number" value="290"></td><td class="line-content">                        drawOnChartArea: false</td></tr><tr><td class="line-number" value="291"></td><td class="line-content">                    }</td></tr><tr><td class="line-number" value="292"></td><td class="line-content">                }</td></tr><tr><td class="line-number" value="293"></td><td class="line-content">            },</td></tr><tr><td class="line-number" value="294"></td><td class="line-content">            interaction: {</td></tr><tr><td class="line-number" value="295"></td><td class="line-content">                intersect: false,</td></tr><tr><td class="line-number" value="296"></td><td class="line-content">                mode: 'nearest',</td></tr><tr><td class="line-number" value="297"></td><td class="line-content">            },</td></tr><tr><td class="line-number" value="298"></td><td class="line-content">            elements: {</td></tr><tr><td class="line-number" value="299"></td><td class="line-content">                line: {</td></tr><tr><td class="line-number" value="300"></td><td class="line-content">                    cubicInterpolationMode: 'monotone',</td></tr><tr><td class="line-number" value="301"></td><td class="line-content">                },</td></tr><tr><td class="line-number" value="302"></td><td class="line-content">            },</td></tr><tr><td class="line-number" value="303"></td><td class="line-content">        }</td></tr><tr><td class="line-number" value="304"></td><td class="line-content">    });</td></tr><tr><td class="line-number" value="305"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="306"></td><td class="line-content">    let lastUpdate = Date.now();  // Initialize to current time</td></tr><tr><td class="line-number" value="307"></td><td class="line-content">    let firstUpdate = true;  // Flag to ensure first update happens immediately</td></tr><tr><td class="line-number" value="308"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="309"></td><td class="line-content">    let maxWindSpeed = 0;</td></tr><tr><td class="line-number" value="310"></td><td class="line-content">    let maxTemp = -Infinity;</td></tr><tr><td class="line-number" value="311"></td><td class="line-content">    let minTemp = Infinity;</td></tr><tr><td class="line-number" value="312"></td><td class="line-content">    let maxPressure = -Infinity;</td></tr><tr><td class="line-number" value="313"></td><td class="line-content">    let minPressure = Infinity;</td></tr><tr><td class="line-number" value="314"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="315"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="316"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="317"></td><td class="line-content">    function updateWindSpeed(windSpeed, timestamp) {</td></tr><tr><td class="line-number" value="318"></td><td class="line-content">    console.log(`Received wind speed: ${windSpeed}, Current max: ${maxWindSpeed}`);</td></tr><tr><td class="line-number" value="319"></td><td class="line-content">        weatherChart.data.labels.push(timestamp);</td></tr><tr><td class="line-number" value="320"></td><td class="line-content">        weatherChart.data.datasets[0].data.push(windSpeed);</td></tr><tr><td class="line-number" value="321"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="322"></td><td class="line-content">        // Update max wind speed</td></tr><tr><td class="line-number" value="323"></td><td class="line-content">        if (windSpeed &gt; maxWindSpeed - 0.1) {</td></tr><tr><td class="line-number" value="324"></td><td class="line-content">            maxWindSpeed = windSpeed;</td></tr><tr><td class="line-number" value="325"></td><td class="line-content">            document.getElementById('maxWindSpeed').innerText = `Max Wind Speed: ${maxWindSpeed} mph`;</td></tr><tr><td class="line-number" value="326"></td><td class="line-content">        }</td></tr><tr><td class="line-number" value="327"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="328"></td><td class="line-content">        // Limit the number of data points to keep the chart responsive</td></tr><tr><td class="line-number" value="329"></td><td class="line-content">        if (weatherChart.data.labels.length &gt; 1440 * 24) { // Assuming 1 data point per 2.5 seconds, keep 24 hours of data</td></tr><tr><td class="line-number" value="330"></td><td class="line-content">            weatherChart.data.labels.shift();</td></tr><tr><td class="line-number" value="331"></td><td class="line-content">            weatherChart.data.datasets[0].data.shift();</td></tr><tr><td class="line-number" value="332"></td><td class="line-content">        }</td></tr><tr><td class="line-number" value="333"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="334"></td><td class="line-content">        weatherChart.update();</td></tr><tr><td class="line-number" value="335"></td><td class="line-content">    }</td></tr><tr><td class="line-number" value="336"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="337"></td><td class="line-content">    function updateOtherMetrics(temperature, solarRadiation, rainAmount, pressure, timestamp) {</td></tr><tr><td class="line-number" value="338"></td><td class="line-content">        weatherChart.data.datasets[1].data.push({x: timestamp, y: temperature});</td></tr><tr><td class="line-number" value="339"></td><td class="line-content">        weatherChart.data.datasets[2].data.push({x: timestamp, y: solarRadiation});</td></tr><tr><td class="line-number" value="340"></td><td class="line-content">        weatherChart.data.datasets[3].data.push({x: timestamp, y: rainAmount &gt; 0 ? rainAmount : null});</td></tr><tr><td class="line-number" value="341"></td><td class="line-content">        weatherChart.data.datasets[4].data.push({x: timestamp, y: pressure});</td></tr><tr><td class="line-number" value="342"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="343"></td><td class="line-content">        // Log current values for debugging</td></tr><tr><td class="line-number" value="344"></td><td class="line-content">        console.log(`Current maxTemp: ${maxTemp}, new temperature: ${temperature}`);</td></tr><tr><td class="line-number" value="345"></td><td class="line-content">        console.log(`Current minTemp: ${minTemp}, new temperature: ${temperature}`);</td></tr><tr><td class="line-number" value="346"></td><td class="line-content">        console.log(`Current maxPressure: ${maxPressure}, new pressure: ${pressure}`);</td></tr><tr><td class="line-number" value="347"></td><td class="line-content">        console.log(`Current minPressure: ${minPressure}, new pressure: ${pressure}`);</td></tr><tr><td class="line-number" value="348"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="349"></td><td class="line-content">        // Update max and min temperature</td></tr><tr><td class="line-number" value="350"></td><td class="line-content">        if (temperature &gt; maxTemp) {</td></tr><tr><td class="line-number" value="351"></td><td class="line-content">            maxTemp = temperature;</td></tr><tr><td class="line-number" value="352"></td><td class="line-content">            document.getElementById('maxTemp').innerText = `Max Temperature: ${maxTemp} °C`;</td></tr><tr><td class="line-number" value="353"></td><td class="line-content">            console.log(`Updated maxTemp: ${maxTemp}`);</td></tr><tr><td class="line-number" value="354"></td><td class="line-content">        }</td></tr><tr><td class="line-number" value="355"></td><td class="line-content">        if (temperature &lt; minTemp) {</td></tr><tr><td class="line-number" value="356"></td><td class="line-content">            minTemp = temperature;</td></tr><tr><td class="line-number" value="357"></td><td class="line-content">            document.getElementById('minTemp').innerText = `Min Temperature: ${minTemp} °C`;</td></tr><tr><td class="line-number" value="358"></td><td class="line-content">            console.log(`Updated minTemp: ${minTemp}`);</td></tr><tr><td class="line-number" value="359"></td><td class="line-content">        }</td></tr><tr><td class="line-number" value="360"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="361"></td><td class="line-content">        // Update max and min pressure</td></tr><tr><td class="line-number" value="362"></td><td class="line-content">        if (pressure &gt; maxPressure) {</td></tr><tr><td class="line-number" value="363"></td><td class="line-content">            maxPressure = pressure;</td></tr><tr><td class="line-number" value="364"></td><td class="line-content">            document.getElementById('maxPressure').innerText = `Max Pressure: ${maxPressure} mbar`;</td></tr><tr><td class="line-number" value="365"></td><td class="line-content">            console.log(`Updated maxPressure: ${maxPressure}`);</td></tr><tr><td class="line-number" value="366"></td><td class="line-content">        }</td></tr><tr><td class="line-number" value="367"></td><td class="line-content">        if (pressure &lt; minPressure) {</td></tr><tr><td class="line-number" value="368"></td><td class="line-content">            minPressure = pressure;</td></tr><tr><td class="line-number" value="369"></td><td class="line-content">            document.getElementById('minPressure').innerText = `Min Pressure: ${minPressure} mbar`;</td></tr><tr><td class="line-number" value="370"></td><td class="line-content">            console.log(`Updated minPressure: ${minPressure}`);</td></tr><tr><td class="line-number" value="371"></td><td class="line-content">        }</td></tr><tr><td class="line-number" value="372"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="373"></td><td class="line-content">        // Limit the number of data points to keep the chart responsive</td></tr><tr><td class="line-number" value="374"></td><td class="line-content">        if (weatherChart.data.labels.length &gt; 1440 * 24) { // Assuming 1 data point per minute, keep 24 hours of data</td></tr><tr><td class="line-number" value="375"></td><td class="line-content">            weatherChart.data.datasets[1].data.shift();</td></tr><tr><td class="line-number" value="376"></td><td class="line-content">            weatherChart.data.datasets[2].data.shift();</td></tr><tr><td class="line-number" value="377"></td><td class="line-content">            weatherChart.data.datasets[3].data.shift();</td></tr><tr><td class="line-number" value="378"></td><td class="line-content">            weatherChart.data.datasets[4].data.shift();</td></tr><tr><td class="line-number" value="379"></td><td class="line-content">        }</td></tr><tr><td class="line-number" value="380"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="381"></td><td class="line-content">        weatherChart.update();</td></tr><tr><td class="line-number" value="382"></td><td class="line-content">    }</td></tr><tr><td class="line-number" value="383"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="384"></td><td class="line-content">    function updateForecast(forecast) {</td></tr><tr><td class="line-number" value="385"></td><td class="line-content">        document.getElementById('forecast').innerText = `Forecast: ${forecast}`;</td></tr><tr><td class="line-number" value="386"></td><td class="line-content">    }</td></tr><tr><td class="line-number" value="387"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="388"></td><td class="line-content">    function onMessageArrived(message) {</td></tr><tr><td class="line-number" value="389"></td><td class="line-content">        console.log("Message Arrived: " + message.destinationName + " : " + message.payloadString);</td></tr><tr><td class="line-number" value="390"></td><td class="line-content">        if (message.destinationName === "personal/ucfnaps/downhamweather/loop") {</td></tr><tr><td class="line-number" value="391"></td><td class="line-content">            const data = JSON.parse(message.payloadString);</td></tr><tr><td class="line-number" value="392"></td><td class="line-content">            const windSpeed = data['windSpeed_mph'];  // Adjust this key according to your data structure</td></tr><tr><td class="line-number" value="393"></td><td class="line-content">            const temperature = data['outTemp_C'];  // Adjust this key according to your data structure</td></tr><tr><td class="line-number" value="394"></td><td class="line-content">            const solarRadiation = data['radiation_Wpm2'];  // Adjust this key according to your data structure</td></tr><tr><td class="line-number" value="395"></td><td class="line-content">            const rainAmount = data['dayRain_mm'];  // Adjust this key according to your data structure</td></tr><tr><td class="line-number" value="396"></td><td class="line-content">            const pressure = data['pressure_mbar'];  // Adjust this key according to your data structure</td></tr><tr><td class="line-number" value="397"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="398"></td><td class="line-content">            const nowTimestamp = new Date();</td></tr><tr><td class="line-number" value="399"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="400"></td><td class="line-content">            // Update wind speed every time</td></tr><tr><td class="line-number" value="401"></td><td class="line-content">            updateWindSpeed(windSpeed, nowTimestamp);</td></tr><tr><td class="line-number" value="402"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="403"></td><td class="line-content">            if (firstUpdate || Date.now() - lastUpdate &gt;= 60000) {</td></tr><tr><td class="line-number" value="404"></td><td class="line-content">                // Update other metrics every minute</td></tr><tr><td class="line-number" value="405"></td><td class="line-content">                updateOtherMetrics(temperature, solarRadiation, rainAmount, pressure, nowTimestamp);</td></tr><tr><td class="line-number" value="406"></td><td class="line-content">                lastUpdate = Date.now();</td></tr><tr><td class="line-number" value="407"></td><td class="line-content">                firstUpdate = false;  // Ensure subsequent updates follow the interval</td></tr><tr><td class="line-number" value="408"></td><td class="line-content">            }</td></tr><tr><td class="line-number" value="409"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="410"></td><td class="line-content">            // Pulse the dot when new data arrives</td></tr><tr><td class="line-number" value="411"></td><td class="line-content">            pulseDot();</td></tr><tr><td class="line-number" value="412"></td><td class="line-content">        } else if (message.destinationName === "personal/ucfnaps/eink/met") {</td></tr><tr><td class="line-number" value="413"></td><td class="line-content">            const forecast = message.payloadString + " Source UK Met Office";</td></tr><tr><td class="line-number" value="414"></td><td class="line-content">            updateForecast(forecast);</td></tr><tr><td class="line-number" value="415"></td><td class="line-content">        }</td></tr><tr><td class="line-number" value="416"></td><td class="line-content">    }</td></tr><tr><td class="line-number" value="417"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="418"></td><td class="line-content">    window.onload = function() {</td></tr><tr><td class="line-number" value="419"></td><td class="line-content">        MQTTconnect();</td></tr><tr><td class="line-number" value="420"></td><td class="line-content">    }</td></tr><tr><td class="line-number" value="421"></td><td class="line-content"><span class="html-tag">&lt;/script&gt;</span></td></tr><tr><td class="line-number" value="422"></td><td class="line-content"><span class="html-tag">&lt;/body&gt;</span></td></tr><tr><td class="line-number" value="423"></td><td class="line-content"><span class="html-tag">&lt;/html&gt;</span><span class="html-end-of-file"></span></td></tr></tbody></table></body></html>